@startuml

class RPSapp {
    - Match match
    +RPS
}

/'PACKAGE VIEW'/
package View{
    class RPSGameView {
        + void rpsGame()
        + void executeGame()
    }

    class MatchView {
        + void match()
        + void executeInitialRound()
        + void executeRounds()
    }

    class RoundView {
        + void Rounds()
        + void runningRound()
    }

    class PlayerView {

    }
}
/'PACKAGE CONTROLLER'/
package Controller {
    class RPSGamecontroller {
        - Players playerA
        - Players playerB
        - Match match
        + void rpsGame()
        + void executeGame()
        + void exitGame()
        + void createPlayers()
        + void createMatch()
    }

    class MatchController {
        - MatchModel matchModel
        - PlayerController[] playersController
        - RoundController roundController
        
        - Rounds rounds
        - Score score
        + void match()
        + void executeInitialRound()
        + void executeRounds()
        + void checkScore()
        + void announceWinner()
        + void updateRoundNumber()
    }

    class RoundController {
        - Score score
        - Players[] players
        - int myRoundNumber
        - Shapes playerAShapeSelected
        - Shapes playerBShapeSelected
        + void Rounds()
        + void runningRound()
        + void checkWinnerOfTheRound()
    }

    abstract class PlayerController {
        - int id_Player
        - String name
        - TypePlayer id_TypePlayer
        + Shape chooseAShape()
    }

    class HumanPlayerController {
        + Shape chooseAShape()
    }

    class ComputerPlayercontroller {
        + Shape chooseAShape()
    }

    class ScoreController {
        - int p1Score
        - int p2Score
        + void showFinalResults()
        + int getP1Score()
        + int getP2Score()
        + void updateScoreGame()
    }

    /'RPSapp *-- RPSGamecontroller'/
    RPSapp *-- MatchController
    PlayerController <|-- HumanPlayerController
    PlayerController <|-- ComputerPlayercontroller
    /'RPSGamecontroller --> MatchController'/
    MatchController --> RoundController
    MatchController --> ScoreController
    PlayerController <-- MatchController

}

package model {

    class Game {
        -id_match
    }
    
    class Round {
    -id_round int
    -id_match Match
    -id_shape1 Shape
    -id_shape2 Shape
    -id_score Score
}

class Match {
    -id_match int
    -id_score Score
    -id_player1 Player
    -id_player2 Player
}

class Score {
    -id_score int
    -id_player1 Player
    -id_player2 Player
    -id_winner Player
}

class Shape {
    -id_shape int
    -name String
}

class Player{
    -id_player int
    -name String
    -id_typePlayer TypePlayer
}

class TypePlayer {
    -id_typePlayer int
    -name String
}
    Game *-- Match
    Match *-- Round
    Match *-- Player
    Round o-- Shape
    Player *-- TypePlayer
    Match *-- Score 
}

RPSGameView ..> MatchView
MatchView ..> RoundView
MatchView ..> PlayerView

RPSGamecontroller --> RPSGameView
MatchController --> MatchView
RPSGamecontroller --> Match

@enduml